# -*- mode: conf-unix -*-

[general]
accounts = Gmail
maxsyncaccounts = 3
pythonfile = ~/.offlineimap.py
socktimeout = 60
fsync = False

[Account Gmail]
localrepository  = Local
remoterepository = Remote
postsynchook = mu index --maildir ~/Maildir
# autorefresh = 15
quick = 10
maxage = 2017-06-01
synclabels = yes
labelsheader = X-Keywords
ignorelabels = \Sent, \Trash
status_backend = sqlite

[Repository Local]
type = GmailMaildir
localfolders = ~/Maildir
sync_deletes = no
# nametrans = lambda folder: {'archive': '[Gmail]/All Mail', '': ''}.get(folder, folder)
nametrans = lambda f: '[Gmail]/' + f if f in ['Drafts', 'Starred', 'Important', 'Spam', 'Trash', 'All Mail', 'Sent Mail'] else f

[Repository Remote]
type = Gmail
#remotehost = imap.gmail.com
remoteuser = toby.tripp@gmail.com
remotepasseval = get_password_emacs("imap.gmail.com", "toby.tripp@gmail.com", "993")
#ssl = yes
maxconnections = 2
realdelete = no
#auth_mechanisms = XOAUTH2, GSSAPI
sslcacertfile = /usr/local/etc/openssl/cert.pem
holdconnectionopen = true
keepalive = 60
nametrans = lambda f: f.replace('[Gmail]/', '') if f.startswith('[Gmail]/') else f
# nametrans = lambda folder: {'[Gmail]/All Mail': 'archive'}.get(folder, folder)
## discover GMail ``folders'' with: `offlineimap --info`
# folderfilter = lambda foldername: not re.search( '(^Groups|Draft|Trash)', foldername )
folderfilter = lambda folder: folder in ['[Gmail]/All Mail', 'INBOX']
